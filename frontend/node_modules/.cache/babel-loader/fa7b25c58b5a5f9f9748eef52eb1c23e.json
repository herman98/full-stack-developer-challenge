{"ast":null,"code":"import _regeneratorRuntime from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{getImage}from\"../../API-services/images\";import{EntityImageLogo as ImageEntity}from\"../../components/Entity\";import{Pagination}from\"antd\";var List=function List(){var isMounted=true;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),images=_useState2[0],setImages=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),paging=_useState4[0],setPaging=_useState4[1];var fetchVariants=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(page,perPage){var response,result,paginationAttribute;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getImage(page,perPage);case 3:response=_context.sent;result=[];paginationAttribute={};if(response.status===200){result=response.data.data.images.map(function(variant){return{id:variant.id,url_name:variant.url};});paginationAttribute=response.data.data.paging;if(isMounted){setImages(result);setPaging({currentPage:paginationAttribute.current_page,total:paginationAttribute.count});}}else{console.error(\"fail to fetch images logo\");}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchVariants(_x,_x2){return _ref.apply(this,arguments);};}();var onPaginationChange=function onPaginationChange(page,pageSize){fetchVariants(page,pageSize);};useEffect(function(){fetchVariants(1,10);return function cleanup(){isMounted=false;};},[]);return/*#__PURE__*/React.createElement(\"div\",{style:{position:\"relative\",paddingBottom:72}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Images List\"),images.map(function(images,index){return/*#__PURE__*/React.createElement(ImageEntity,{key:index,url_name:images.url_name//   detailUrl={`/image/detail/${variant.id}`}\n,editUrl:\"/image_logo/\".concat(images.id)});})),/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\",position:\"absolute\",bottom:0,display:\"flex\",justifyContent:\"center\"}},/*#__PURE__*/React.createElement(Pagination,{defaultCurrent:1,total:paging.total,current:paging.currentPage,pageSize:10,onChange:onPaginationChange})));};export default List;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/ImageLogo/List.jsx"],"names":["React","useState","useEffect","getImage","EntityImageLogo","ImageEntity","Pagination","List","isMounted","images","setImages","paging","setPaging","fetchVariants","page","perPage","response","result","paginationAttribute","status","data","map","variant","id","url_name","url","currentPage","current_page","total","count","console","error","log","onPaginationChange","pageSize","cleanup","position","paddingBottom","index","width","bottom","display","justifyContent"],"mappings":"ujBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,2BAAzB,CACA,OAASC,eAAe,GAAIC,CAAAA,WAA5B,KAAgD,yBAAhD,CACA,OAASC,UAAT,KAA2B,MAA3B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAIC,CAAAA,SAAS,CAAG,IAAhB,CADiB,cAESP,QAAQ,CAAC,EAAD,CAFjB,wCAEZQ,MAFY,eAEJC,SAFI,8BAGST,QAAQ,CAAC,EAAD,CAHjB,yCAGZU,MAHY,eAGJC,SAHI,eAKjB,GAAMC,CAAAA,aAAa,0FAAG,iBAAOC,IAAP,CAAaC,OAAb,gMAEGZ,CAAAA,QAAQ,CAACW,IAAD,CAAOC,OAAP,CAFX,QAEdC,QAFc,eAGdC,MAHc,CAGL,EAHK,CAIdC,mBAJc,CAIQ,EAJR,CAKlB,GAAIF,QAAQ,CAACG,MAAT,GAAoB,GAAxB,CAA6B,CAC3BF,MAAM,CAAGD,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBX,MAAnB,CAA0BY,GAA1B,CAA8B,SAACC,OAAD,QAAc,CACnDC,EAAE,CAAED,OAAO,CAACC,EADuC,CAEnDC,QAAQ,CAAEF,OAAO,CAACG,GAFiC,CAAd,EAA9B,CAAT,CAIAP,mBAAmB,CAAGF,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBT,MAAzC,CACA,GAAIH,SAAJ,CAAe,CACXE,SAAS,CAACO,MAAD,CAAT,CACFL,SAAS,CAAC,CACRc,WAAW,CAAER,mBAAmB,CAACS,YADzB,CAERC,KAAK,CAAEV,mBAAmB,CAACW,KAFnB,CAAD,CAAT,CAID,CACF,CAbD,IAaO,CACLC,OAAO,CAACC,KAAR,CAAc,2BAAd,EACD,CApBiB,+EAsBlBD,OAAO,CAACE,GAAR,cAtBkB,oEAAH,kBAAbnB,CAAAA,aAAa,gDAAnB,CA0BA,GAAMoB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACnB,IAAD,CAAOoB,QAAP,CAAoB,CAC7CrB,aAAa,CAACC,IAAD,CAAOoB,QAAP,CAAb,CACD,CAFD,CAIAhC,SAAS,CAAC,UAAM,CACdW,aAAa,CAAC,CAAD,CAAI,EAAJ,CAAb,CAEA,MAAO,SAASsB,CAAAA,OAAT,EAAmB,CACxB3B,SAAS,CAAG,KAAZ,CACD,CAFD,CAGD,CANQ,CAMN,EANM,CAAT,CAQA,mBACE,2BAAK,KAAK,CAAE,CAAE4B,QAAQ,CAAE,UAAZ,CAAwBC,aAAa,CAAE,EAAvC,CAAZ,eACE,4CACE,4CADF,CAEG5B,MAAM,CAACY,GAAP,CAAW,SAACZ,MAAD,CAAS6B,KAAT,CAAmB,CAC7B,mBACE,oBAAC,WAAD,EACE,GAAG,CAAEA,KADP,CAEE,QAAQ,CAAE7B,MAAM,CAACe,QACnB;AAHA,CAIE,OAAO,uBAAiBf,MAAM,CAACc,EAAxB,CAJT,EADF,CAQD,CATA,CAFH,CADF,cAcE,2BACE,KAAK,CAAE,CACLgB,KAAK,CAAE,MADF,CAELH,QAAQ,CAAE,UAFL,CAGLI,MAAM,CAAE,CAHH,CAILC,OAAO,CAAE,MAJJ,CAKLC,cAAc,CAAE,QALX,CADT,eASE,oBAAC,UAAD,EACE,cAAc,CAAE,CADlB,CAEE,KAAK,CAAE/B,MAAM,CAACiB,KAFhB,CAGE,OAAO,CAAEjB,MAAM,CAACe,WAHlB,CAIE,QAAQ,CAAE,EAJZ,CAKE,QAAQ,CAAEO,kBALZ,EATF,CAdF,CADF,CAkCD,CA7ED,CA+EA,cAAe1B,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getImage } from \"../../API-services/images\";\nimport { EntityImageLogo as ImageEntity }  from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [images, setImages] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchVariants = async (page, perPage) => {\n    try {\n      let response = await getImage(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.images.map((variant) => ({\n          id: variant.id,\n          url_name: variant.url,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n            setImages(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch images logo\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchVariants(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchVariants(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1>Images List</h1>\n        {images.map((images, index) => {\n          return (\n            <ImageEntity\n              key={index}\n              url_name={images.url_name}\n            //   detailUrl={`/image/detail/${variant.id}`}\n              editUrl={`/image_logo/${images.id}`}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;"]},"metadata":{},"sourceType":"module"}