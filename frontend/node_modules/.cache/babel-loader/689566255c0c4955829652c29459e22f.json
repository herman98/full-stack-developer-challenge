{"ast":null,"code":"var _jsxFileName = \"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Product/List.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { getProduct } from \"../../API-services/product\";\nimport { Entity as Product } from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [products, setProducts] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchProducts = async (page, perPage) => {\n    try {\n      let response = await getProduct(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n\n      if (response.status === 200) {\n        result = response.data.data.products.map(product => ({\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          logo: product.logo.url\n        }));\n        paginationAttribute = response.data.data.paging;\n\n        if (isMounted) {\n          setProducts(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count\n          });\n        }\n      } else {\n        console.error(\"fail to fetch products\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchProducts(page, pageSize);\n  };\n\n  useEffect(() => {\n    fetchProducts(1, 10);\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      paddingBottom: 72\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Product List\"), products.map((product, index) => {\n    return /*#__PURE__*/React.createElement(Product, {\n      key: index,\n      name: product.name,\n      logo: product.logo,\n      description: product.description,\n      detailUrl: \"/product/detail/\" + product.id,\n      editUrl: `/product/${product.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"absolute\",\n      bottom: 0,\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    defaultCurrent: 1,\n    total: paging.total,\n    current: paging.currentPage,\n    pageSize: 10,\n    onChange: onPaginationChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Product/List.jsx"],"names":["React","useState","useEffect","getProduct","Entity","Product","Pagination","List","isMounted","products","setProducts","paging","setPaging","fetchProducts","page","perPage","response","result","paginationAttribute","status","data","map","product","id","name","description","logo","url","currentPage","current_page","total","count","console","error","log","onPaginationChange","pageSize","cleanup","position","paddingBottom","fontSize","index","width","bottom","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getProduct } from \"../../API-services/product\";\nimport {Entity as Product} from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [products, setProducts] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchProducts = async (page, perPage) => {\n    try {\n      let response = await getProduct(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.products.map((product) => ({\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          logo: product.logo.url,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n          setProducts(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch products\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  const onPaginationChange = (page, pageSize) => {\n    fetchProducts(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchProducts(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1 style={{fontSize: 32}}>Product List</h1>\n        {products.map((product, index) => {\n          return (\n            <Product\n              key={index}\n              name={product.name}\n              logo={product.logo}\n              description={product.description}\n              detailUrl={\"/product/detail/\" + product.id}\n              editUrl={`/product/${product.id}`}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}