{"ast":null,"code":"import _objectSpread from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";//, cancelCourse\nimport\"antd/dist/antd.css\";import{Form,Input,Button}from\"antd\";import{postImage,getImageById,updateImage}from\"../../API-services/images\";import{successModal,errorModal}from\"../../utilities/modal\";var layout={labelCol:{span:2},wrapperCol:{span:8}};var formItemLayout={labelCol:{xs:{span:24},sm:{span:8}},wrapperCol:{xs:{span:24},sm:{span:16}}};var validateMessages={required:\"${label} is required!\"};var ImageLogoForm=function ImageLogoForm(props){var isMounted=true;var imageId=props.match.params.imageId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),imageUrl=_useState4[0],setImageUrl=_useState4[1];var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var imageInputChange=function imageInputChange(e){if(isMounted){setImageUrl(e.target.value);}};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var payload,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isMounted){setLoading(true);}payload={url:imageUrl};_context.prev=2;response={};if(!imageId){_context.next=10;break;}_context.next=7;return updateImage(imageId,payload);case 7:response=_context.sent;_context.next=13;break;case 10:_context.next=12;return postImage(payload);case 12:response=_context.sent;case 13:if(response.status===200){successModal();}else{errorModal();}_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);errorModal();console.error(_context.t0);case 20:if(isMounted){setLoading(false);}case 21:case\"end\":return _context.stop();}}},_callee,null,[[2,16]]);}));return function onSubmit(){return _ref.apply(this,arguments);};}();var fetchImage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(imageId){var response,imageData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getImageById(imageId);case 3:response=_context2.sent;imageData=response.data.data.image;if(imageId&&isMounted){setImageUrl(imageData.url);form.setFieldsValue({ImageUrl:imageData.url});}else{}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchImage(_x){return _ref2.apply(this,arguments);};}();// cancelCourse(() => () => { \n//   form.reset();\n// })\nuseEffect(function(){console.log(\"useEffect imageId :\"+imageId);if(imageId){fetchImage(imageId);}return function cleanup(){isMounted=false;};},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Image Form\"),/*#__PURE__*/React.createElement(Form,Object.assign({},formItemLayout,{form:form,name:\"nest-messages\",validateMessages:validateMessages}),/*#__PURE__*/React.createElement(Form.Item,{name:\"ImageUrl\",label:\"Image Url\",rules:[{required:true}]},/*#__PURE__*/React.createElement(Input,{value:imageUrl,onChange:imageInputChange})),/*#__PURE__*/React.createElement(Form.Item,{wrapperCol:_objectSpread(_objectSpread({},formItemLayout.wrapperCol),{},{offset:8})},/*#__PURE__*/React.createElement(Button,{type:\"primary\",loading:loading,onClick:onSubmit},\"Submit\"))));};export default ImageLogoForm;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/ImageLogo/Form.jsx"],"names":["React","useState","useEffect","Form","Input","Button","postImage","getImageById","updateImage","successModal","errorModal","layout","labelCol","span","wrapperCol","formItemLayout","xs","sm","validateMessages","required","ImageLogoForm","props","isMounted","imageId","match","params","loading","setLoading","imageUrl","setImageUrl","useForm","form","imageInputChange","e","target","value","onSubmit","payload","url","response","status","console","error","fetchImage","imageData","data","image","setFieldsValue","ImageUrl","log","cleanup","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"; //, cancelCourse\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\nimport {\n  postImage,\n  getImageById,\n  updateImage,\n} from \"../../API-services/images\";\n\nimport { successModal, errorModal } from \"../../utilities/modal\";\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst ImageLogoForm = (props) => {\n  let isMounted = true\n  let imageId = props.match.params.imageId;\n  let [loading, setLoading] = useState(false);\n  let [imageUrl, setImageUrl] = useState(\"\");\n  const [form] = Form.useForm();\n\n  const imageInputChange = (e) => {\n    if (isMounted) {\n      setImageUrl(e.target.value);\n    }\n  };\n\n  const onSubmit = async () => {\n    if (isMounted) {\n      setLoading(true);\n    }\n\n    const payload = {\n      url: imageUrl,\n    };\n\n    try {\n      let response = {};\n      if (imageId) {\n        response = await updateImage(imageId, payload);\n      } else {\n        response = await postImage(payload);\n      }\n\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n    if (isMounted) {\n      setLoading(false);\n    }\n  };\n\n  const fetchImage = async (imageId) => {\n    try {\n      let response = await getImageById(imageId);\n      let imageData = response.data.data.image;\n      if (imageId && isMounted) {\n        setImageUrl(imageData.url);\n      \n        form.setFieldsValue({\n          ImageUrl: imageData.url,\n        });\n      } else {\n        \n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // cancelCourse(() => () => { \n  //   form.reset();\n  // })\n\n  useEffect(() => {\n    console.log(\"useEffect imageId :\" + imageId)\n    \n    if (imageId) {\n      fetchImage(imageId);\n    } \n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, [])\n\n  \n  return (\n    <>\n      <h1>Image Form</h1>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name=\"ImageUrl\"\n          label=\"Image Url\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input value={imageUrl} onChange={imageInputChange}/>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ ...formItemLayout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ImageLogoForm;\n"]},"metadata":{},"sourceType":"module"}