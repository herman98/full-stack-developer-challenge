{"ast":null,"code":"var _jsxFileName = \"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Variant/Form.jsx\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button } from 'antd';\nimport { AutoComplete } from 'antd';\nconst options = [{\n  value: 'Burns Bay Road'\n}, {\n  value: 'Downing Street'\n}, {\n  value: 'Wall Street'\n}];\nconst layout = {\n  labelCol: {\n    span: 2\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst validateMessages = {\n  required: '${label} is required!'\n};\n\nconst VariantForm = () => {\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onSelect = (value, optionObject) => {\n    console.log(optionObject);\n  };\n\n  const enterLoading = () => {\n    setLoading(true);\n  };\n\n  setTimeout(() => {\n    setLoading(false);\n  }, 2000);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Variant Form\"), /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'product'],\n    label: \"Product\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    style: {\n      width: 200\n    },\n    options: options,\n    onSelect: onSelect,\n    placeholder: \"try to type `b`\",\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'name'],\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'Image Url'],\n    label: \"Image Url\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'Size'],\n    label: \"Size\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'Color'],\n    label: \"Color\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'Description'],\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: { ...layout.wrapperCol,\n      offset: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    loading: loading,\n    onClick: () => enterLoading(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default VariantForm;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Variant/Form.jsx"],"names":["React","useState","Form","Input","Button","AutoComplete","options","value","layout","labelCol","span","wrapperCol","validateMessages","required","VariantForm","loading","setLoading","onFinish","values","console","log","onSelect","optionObject","enterLoading","setTimeout","width","inputValue","option","toUpperCase","indexOf","offset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { Form, Input, Button } from 'antd'\nimport { AutoComplete } from 'antd'\n\nconst options = [\n  {\n    value: 'Burns Bay Road',\n  },\n  {\n    value: 'Downing Street',\n  },\n  {\n    value: 'Wall Street',\n  },\n]\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n}\nconst validateMessages = {\n  required: '${label} is required!',\n}\n\nconst VariantForm = () => {\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = (values) => {\n    console.log(values)\n  }\n\n  const onSelect = (value, optionObject) => {\n    console.log(optionObject)\n  }\n\n  const enterLoading = () => {\n    setLoading(true)\n  }\n\n  setTimeout(() => {\n    setLoading(false)\n  }, 2000)\n\n  return (\n    <>\n      <h1>Variant Form</h1>\n\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name={['user', 'product']}\n          label=\"Product\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={options}\n            onSelect={onSelect}\n            placeholder=\"try to type `b`\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'name']}\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Image Url']}\n          label=\"Image Url\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Size']}\n          label=\"Size\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Color']}\n          label=\"Color\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'Description']} label=\"Description\">\n          <Input.TextArea />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={() => enterLoading(0)}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  )\n}\n\nexport default VariantForm\n"]},"metadata":{},"sourceType":"module"}