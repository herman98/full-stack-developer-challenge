{"ast":null,"code":"var _jsxFileName = \"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Variant/List.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { getVariant } from \"../../API-services/variant\";\nimport { EntityVariant as Variant } from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [variants, setVariants] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchVariants = async (page, perPage) => {\n    try {\n      let response = await getVariant(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n\n      if (response.status === 200) {\n        result = response.data.data.variants.map(variant => ({\n          id: variant.id,\n          name: variant.name,\n          product_id: variant.product_id\n        }));\n        paginationAttribute = response.data.data.paging;\n\n        if (isMounted) {\n          setVariants(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count\n          });\n        }\n      } else {\n        console.error(\"fail to fetch variants\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchVariants(page, pageSize);\n  };\n\n  useEffect(() => {\n    fetchVariants(1, 10);\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      paddingBottom: 72\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Variant List\"), variants.map((variant, index) => {\n    return /*#__PURE__*/React.createElement(Variant, {\n      key: index,\n      name: variant.name,\n      size: variant.size,\n      color: variant.color,\n      detailUrl: `/variant/detail/${variant.id}`,\n      editUrl: `/variant/${variant.id}`,\n      parentID: variant.product_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"absolute\",\n      bottom: 0,\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    defaultCurrent: 1,\n    total: paging.total,\n    current: paging.currentPage,\n    pageSize: 10,\n    onChange: onPaginationChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Variant/List.jsx"],"names":["React","useState","useEffect","getVariant","EntityVariant","Variant","Pagination","List","isMounted","variants","setVariants","paging","setPaging","fetchVariants","page","perPage","response","result","paginationAttribute","status","data","map","variant","id","name","product_id","currentPage","current_page","total","count","console","error","log","onPaginationChange","pageSize","cleanup","position","paddingBottom","index","size","color","width","bottom","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getVariant } from \"../../API-services/variant\";\nimport { EntityVariant as Variant }  from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [variants, setVariants] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchVariants = async (page, perPage) => {\n    try {\n      let response = await getVariant(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.variants.map((variant) => ({\n          id: variant.id,\n          name: variant.name,\n          product_id: variant.product_id,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n          setVariants(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch variants\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchVariants(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchVariants(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1>Variant List</h1>\n        {variants.map((variant, index) => {\n          return (\n            <Variant\n              key={index}\n              name={variant.name}\n              size={variant.size}\n              color={variant.color}\n              detailUrl={`/variant/detail/${variant.id}`}\n              editUrl={`/variant/${variant.id}`}\n              parentID={variant.product_id}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}