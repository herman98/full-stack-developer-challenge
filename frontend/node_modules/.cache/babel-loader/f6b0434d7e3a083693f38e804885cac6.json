{"ast":null,"code":"import _objectSpread from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'antd/dist/antd.css';import{Form,Input,Button}from'antd';import{AutoComplete}from'antd';var options=[{value:'Burns Bay Road'},{value:'Downing Street'},{value:'Wall Street'}];var layout={labelCol:{span:2},wrapperCol:{span:8}};var validateMessages={required:'${label} is required!'};var VariantForm=function VariantForm(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var onFinish=function onFinish(values){console.log(values);};var onSelect=function onSelect(value,optionObject){console.log(optionObject);};var enterLoading=function enterLoading(){setLoading(true);};setTimeout(function(){setLoading(false);},2000);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Variant Form\"),/*#__PURE__*/React.createElement(Form,Object.assign({},layout,{name:\"nest-messages\",onFinish:onFinish,validateMessages:validateMessages}),/*#__PURE__*/React.createElement(Form.Item,{name:['user','product'],label:\"Product\",rules:[{required:true}]},/*#__PURE__*/React.createElement(AutoComplete,{style:{width:200},options:options,onSelect:onSelect,placeholder:\"try to type `b`\",filterOption:function filterOption(inputValue,option){return option.value.toUpperCase().indexOf(inputValue.toUpperCase())!==-1;}})),/*#__PURE__*/React.createElement(Form.Item,{name:['user','name'],label:\"Name\",rules:[{required:true}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Form.Item,{name:['user','Image Url'],label:\"Image Url\",rules:[{required:true}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Form.Item,{name:['user','Size'],label:\"Size\",rules:[{required:true}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Form.Item,{name:['user','Color'],label:\"Color\",rules:[{required:true}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Form.Item,{name:['user','Description'],label:\"Description\"},/*#__PURE__*/React.createElement(Input.TextArea,null)),/*#__PURE__*/React.createElement(Form.Item,{wrapperCol:_objectSpread(_objectSpread({},layout.wrapperCol),{},{offset:8})},/*#__PURE__*/React.createElement(Button,{type:\"primary\",loading:loading,onClick:function onClick(){return enterLoading(0);}},\"Submit\"))));};export default VariantForm;","map":{"version":3,"sources":["/home/herman3g/learn/sourcesage/full-stack-developer-challenge/frontend/src/pages/Variant/Form.jsx"],"names":["React","useState","Form","Input","Button","AutoComplete","options","value","layout","labelCol","span","wrapperCol","validateMessages","required","VariantForm","loading","setLoading","onFinish","values","console","log","onSelect","optionObject","enterLoading","setTimeout","width","inputValue","option","toUpperCase","indexOf","offset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { Form, Input, Button } from 'antd'\nimport { AutoComplete } from 'antd'\n\nconst options = [\n  {\n    value: 'Burns Bay Road',\n  },\n  {\n    value: 'Downing Street',\n  },\n  {\n    value: 'Wall Street',\n  },\n]\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n}\nconst validateMessages = {\n  required: '${label} is required!',\n}\n\nconst VariantForm = () => {\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = (values) => {\n    console.log(values)\n  }\n\n  const onSelect = (value, optionObject) => {\n    console.log(optionObject)\n  }\n\n  const enterLoading = () => {\n    setLoading(true)\n  }\n\n  setTimeout(() => {\n    setLoading(false)\n  }, 2000)\n\n  return (\n    <>\n      <h1>Variant Form</h1>\n\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name={['user', 'product']}\n          label=\"Product\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={options}\n            onSelect={onSelect}\n            placeholder=\"try to type `b`\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'name']}\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Image Url']}\n          label=\"Image Url\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Size']}\n          label=\"Size\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'Color']}\n          label=\"Color\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'Description']} label=\"Description\">\n          <Input.TextArea />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={() => enterLoading(0)}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  )\n}\n\nexport default VariantForm\n"]},"metadata":{},"sourceType":"module"}