{"version":3,"sources":["API-services/axiosInstance.js","API-services/images.js","utilities/modal.js","API-services/product.js","pages/Product/Form.jsx","API-services/variant.js","pages/Variant/Form.jsx","pages/ImageLogo/Form.jsx","API-services/imageAttachent.js","pages/Product/LinkImageForm.jsx","pages/Variant/LinkImageForm.jsx","components/container/Container.jsx","components/image/Image.jsx","components/title/Title.jsx","components/description/Description.jsx","components/Entity/index.jsx","pages/Product/List.jsx","pages/Variant/List.jsx","pages/ImageLogo/List.jsx","pages/ProductDetail/index.jsx","pages/VariantDetail/index.jsx","App.js","serviceWorker.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","postImage","payload","a","response","post","console","error","getImage","page","perPage","get","getImageById","ImageId","updateImage","put","successModal","Modal","success","title","content","errorModal","postProduct","getProduct","getProductById","productId","updateProduct","layout","span","formItemLayout","labelCol","xs","sm","wrapperCol","validateMessages","required","ProductForm","props","isMounted","match","params","useState","autoCompleteOption","setAutoCompleteOption","loading","setLoading","productName","setProductName","imageId","setImageId","description","setDescription","Form","useForm","form","onSubmit","name","logo_id","status","fetchProduct","productData","data","product","setFieldsValue","Name","ImageUrl","logo","url","Description","fetchImage","result","images","map","image","id","value","log","useEffect","Item","label","rules","onChange","e","target","placeholder","options","onSelect","optionObject","filterOption","inputValue","option","toUpperCase","indexOf","TextArea","offset","type","onClick","postVariant","getVariant","getVariantById","variantId","updateVariant","VariantForm","setProductId","setProduct","setName","size","setSize","color","setColor","product_id","fetchProducts","products","fetchProductbyID","Product","fetchVariant","variant","variantData","Size","Color","style","width","ImageLogoForm","imageUrl","setImageUrl","imageData","attachImageToProduct","attachImageToVariant","productOption","setProductOption","imageOption","setImageOption","setImages","addInput","newArray","push","image_id","setTimeout","index","key","display","insertValue","marginLeft","splice","removeInput","danger","disabled","length","CloseOutlined","PlusOutlined","variantOption","setVariantOption","setVariantId","fetchVariants","variants","Container","className","children","Image","src","alt","LargeText","MediumText","Entity","detailUrl","editUrl","parentID","fontWeight","Title","marginBottom","alignItems","to","EntityVariant","EntityImageLogo","url_name","List","setProducts","paging","setPaging","paginationAttribute","currentPage","current_page","total","count","position","paddingBottom","fontSize","bottom","justifyContent","defaultCurrent","current","pageSize","setVariants","Detail","borderBottom","marginTop","flexWrap","marginRight","border","setVariant","Header","Layout","Content","Footer","Sider","SubMenu","Menu","App","collapsed","setCollasped","minHeight","collapsible","onCollapse","collapsedParam","HomeOutlined","theme","defaultSelectedKeys","mode","icon","DesktopOutlined","FileOutlined","padding","margin","exact","path","component","ProductList","LinkImageProduct","ProductDetail","LinkImageVariant","VariantList","VariantDetail","ImageList","render","textAlign","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2e7c7602.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:80\",\n  timeout: 10000,\n  headers: {\n    \"Content-type\": \"application/json\",\n    // \"Accept\": \"application/json\",\n    // \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Headers','Access-Control-Allow-Origin', 'Origin, X-Requested-With, Content-Type, Accept, Authorization\"\n  },\n});\n\nexport default axiosInstance","import axiosInstance from './axiosInstance'\n\nexport async function postImage(payload) {\n  try {\n    let response = axiosInstance.post(\"/api/image\", payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getImage(page = 1, perPage = 10) {\n  try {\n    let response = axiosInstance.get(\n      `/api/images?page=${page}&per_page=${perPage}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\nexport async function getImageById(ImageId) {\n  try {\n    let response = axiosInstance.get(\n      `/api/image/${ImageId}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function updateImage(ImageId, payload) {\n  try {\n    let response = axiosInstance.put(`/api/image/${ImageId}`, payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}","import { Modal } from \"antd\";\n\nexport function successModal() {\n  Modal.success({\n    title: 'Success',\n    content: 'The data have been submitted successfully',\n  });\n}\n\nexport function errorModal() {\n  Modal.error({\n    title: 'Failed',\n    content: 'Failed to submit the data',\n  });\n}","import axiosInstance from './axiosInstance'\n\nexport async function postProduct(payload) {\n  try {\n    let response = axiosInstance.post(\"/api/product\", payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getProduct(page = 1, perPage = 10) {\n  try {\n    let response = axiosInstance.get(\n      `/api/products?page=${page}&per_page=${perPage}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getProductById(productId) {\n  try {\n    let response = axiosInstance.get(\n      `/api/product/${productId}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function updateProduct(productId, payload) {\n  try {\n    let response = axiosInstance.put(`/api/product/${productId}`, payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button, AutoComplete } from \"antd\";\nimport { getImage } from \"../../API-services/images\";\nimport { successModal, errorModal } from \"../../utilities/modal\";\nimport { getProductById, postProduct, updateProduct } from \"../../API-services/product\";\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst ProductForm = (props) => {\n  let isMounted = true\n  let productId = props.match.params.productId\n  let [autoCompleteOption, setAutoCompleteOption] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [productName, setProductName] = useState(\"\");\n  let [imageId, setImageId] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  const [form] = Form.useForm();\n  \n  const onSubmit = async () => {\n    setLoading(true);\n\n    const payload = {\n      name: productName,\n      logo_id: imageId,\n      description,\n    };\n\n    try {\n      let response = {}\n\n      if (productId) {\n        response = await updateProduct(productId, payload);\n      } else {\n        response = await postProduct(payload);\n      }\n\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchProduct = async (productId) => {\n    try {\n      let response = await getProductById(productId);\n      let productData = response.data.data.product;\n      if (isMounted && isMounted) {\n        setProductName(productData.name)\n        setImageId(productData.logo_id)\n        setDescription(productData.description)\n        form.setFieldsValue({\n          Name: productData.name,\n          ImageUrl: productData.logo.url,\n          Description: productData.description\n        })\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchImage = async (page, perPage) => {\n    try {\n      let response = await getImage(page, perPage);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.images.map((image) => ({\n          id: image.id,\n          value: image.url,\n        }));\n        if(isMounted) {\n          setAutoCompleteOption(result);\n        }\n      } else {\n        console.error(\"fail to fetch images\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onNameChange = (e) => {\n    setProductName(e.target.value);\n  };\n\n  const onImageSelect = (value, optionObject) => {\n    setImageId(optionObject.id);\n  };\n\n  const onDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchImage(1, 1000);\n    if (productId) {\n      fetchProduct(productId)\n    }\n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, []);\n\n  return (\n    <>\n      <h1>Product Form</h1>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name={\"Name\"}\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input value={productName} onChange={onNameChange} placeholder={\"Insert product name here\"} />\n        </Form.Item>\n        <Form.Item\n          name={\"ImageUrl\"}\n          label=\"Image Url\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            options={autoCompleteOption}\n            onSelect={onImageSelect}\n            placeholder=\"Image name\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item name={\"Description\"} label=\"Description\">\n          <Input.TextArea value={description} onChange={onDescriptionChange} placeholder={\"Insert product description here\"}/>\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductForm\n","import axiosInstance from './axiosInstance'\n\nexport async function postVariant(payload) {\n  try {\n    let response = axiosInstance.post(\"/api/variant\", payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getVariant(page = 1, perPage = 10) {\n  try {\n    let response = axiosInstance.get(\n      `/api/variants?page=${page}&per_page=${perPage}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getVariantById(variantId) {\n  try {\n    let response = axiosInstance.get(\n      `/api/variant/${variantId}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function updateVariant(variantId, payload) {\n  try {\n    let response = axiosInstance.put(`/api/variant/${variantId}`, payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\nimport { AutoComplete } from \"antd\";\nimport { \n  getProduct, \n  getProductById \n} from \"../../API-services/product\";\nimport {\n  postVariant,\n  getVariantById,\n  updateVariant,\n} from \"../../API-services/variant\";\nimport { successModal, errorModal } from \"../../utilities/modal\";\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst VariantForm = (props) => {\n  let isMounted = true;\n  let variantId = props.match.params.variantId;\n  let [autoCompleteOption, setAutoCompleteOption] = useState([]);\n  let [productId, setProductId] = useState(\"\");\n  let [product, setProduct] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [size, setSize] = useState(\"\");\n  let [color, setColor] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  // const { register, handleSubmit, reset } = useForm();\n  // {\n  //   defaultValues: {\n  //     Name: '',\n  //     Size: '',\n  //     Color: '',\n  //   },\n  // }\n\n  const [form] = Form.useForm();\n  // let [description, setDescription] = useState('')\n\n  const onSelect = (value, optionObject) => {\n    setProductId(optionObject.id);\n  };\n\n  const onNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const onSizeChange = (e) => {\n    setSize(e.target.value);\n  };\n\n  const onColorChange = (e) => {\n    setColor(e.target.value);\n  };\n\n  const onSubmit = async () => {\n    if (isMounted) {\n      setLoading(true);\n    }\n\n    const payload = {\n      name,\n      size,\n      color,\n      product_id: productId,\n    };\n    try {\n      let response = {};\n\n      if (variantId) {\n        response = await updateVariant(productId, payload);\n      } else {\n        response = await postVariant(payload);\n      }\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n    if (isMounted) {\n      setLoading(false);\n    }\n    \n  };\n\n  const fetchProducts = async () => {\n    try {\n      let response = await getProduct(1, 100);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.products.map((product) => ({\n          id: product.id,\n          value: product.name,\n        }));\n        if (isMounted) {\n          setAutoCompleteOption(result);\n        }\n\n      } else {\n        console.error(\"fail to fetch products\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchProductbyID = async (productId) => {\n    try {\n      let response = await getProductById(productId);\n      let productData = response.data.data.product;\n      setProduct(productData.name);\n      form.setFieldsValue({\n        Product: productData.name\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchVariant = async (variantId) => {\n    try {\n      let response = await getVariantById(variantId);\n      fetchProductbyID(response.data.data.variant.product_id)\n\n      let variantData = response.data.data.variant;\n      if (variantId && isMounted) {\n        setName(variantData.name);\n        setSize(variantData.size);\n        setProductId(variantData.product_id);\n        setColor(variantData.color);\n\n        form.setFieldsValue({\n          Name: variantData.name,\n          Size: variantData.size,\n          Color: variantData.color,\n        });\n      } else {\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    if (variantId) {\n      fetchVariant(variantId);\n    }\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <h1>Variant Form</h1>\n\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name=\"Product\"\n          label=\"Product\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={autoCompleteOption}\n            onSelect={onSelect}\n            placeholder=\"Insert product name\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"Name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input value={name} onChange={onNameChange} />\n        </Form.Item>\n        <Form.Item\n          name=\"Size\"\n          label=\"Size\"\n          rules={[]}\n        >\n          <Input value={size} onChange={onSizeChange} />\n        </Form.Item>\n        <Form.Item\n          name=\"Color\"\n          label=\"Color\"\n          rules={[\n            ]}\n        >\n          <Input value={color} onChange={onColorChange} />\n        </Form.Item>\n       \n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default VariantForm;\n","import React, { useState, useEffect } from \"react\"; //, cancelCourse\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\nimport {\n  postImage,\n  getImageById,\n  updateImage,\n} from \"../../API-services/images\";\n\nimport { successModal, errorModal } from \"../../utilities/modal\";\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst ImageLogoForm = (props) => {\n  let isMounted = true\n  let imageId = props.match.params.imageId;\n  let [loading, setLoading] = useState(false);\n  let [imageUrl, setImageUrl] = useState(\"\");\n  const [form] = Form.useForm();\n\n  const imageInputChange = (e) => {\n    if (isMounted) {\n      setImageUrl(e.target.value);\n    }\n  };\n\n  const onSubmit = async () => {\n    if (isMounted) {\n      setLoading(true);\n    }\n\n    const payload = {\n      url: imageUrl,\n    };\n\n    try {\n      let response = {};\n      if (imageId) {\n        response = await updateImage(imageId, payload);\n      } else {\n        response = await postImage(payload);\n      }\n\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n    if (isMounted) {\n      setLoading(false);\n    }\n  };\n\n  const fetchImage = async (imageId) => {\n    try {\n      let response = await getImageById(imageId);\n      let imageData = response.data.data.image;\n      if (imageId && isMounted) {\n        setImageUrl(imageData.url);\n      \n        form.setFieldsValue({\n          ImageUrl: imageData.url,\n        });\n      } else {\n        \n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // cancelCourse(() => () => { \n  //   form.reset();\n  // })\n\n  useEffect(() => {\n    console.log(\"useEffect imageId :\" + imageId)\n    \n    if (imageId) {\n      fetchImage(imageId);\n    } \n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, [])\n\n  \n  return (\n    <>\n      <h1>Image Form</h1>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name=\"ImageUrl\"\n          label=\"Image Url\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input value={imageUrl} onChange={imageInputChange}/>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ ...formItemLayout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ImageLogoForm;\n","import axiosInstance from './axiosInstance'\n\nexport async function attachImageToProduct(productId, payload) {\n  try {\n    let response = axiosInstance.post(`/api/product/${productId}/images`, payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function attachImageToVariant(variantId, payload) {\n  try {\n    let response = axiosInstance.post(`/api/variant/${variantId}/images`, payload);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Button, AutoComplete } from \"antd\";\nimport { PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { getProduct } from \"../../API-services/product\";\nimport { getImage } from \"../../API-services/images\";\nimport { attachImageToProduct } from \"../../API-services/imageAttachent\";\nimport { successModal, errorModal } from \"../../utilities/modal\";\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst ImageLogoForm = () => {\n  let isMounted = true\n  let [productOption, setProductOption] = useState([]);\n  let [imageOption, setImageOption] = useState([]);\n  let [productId, setProductId] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let [images, setImages] = useState([\n    {\n      value: \"\",\n      id: \"-1\",\n    },\n  ]);\n\n  const onSelect = (value, optionObject) => {\n    setProductId(optionObject.id);\n  };\n\n  const insertValue = (value, optionObject, index) => {\n    let newArray = [...images];\n    newArray[index][\"id\"] = optionObject.id;\n    newArray[index][\"value\"] = value;\n    setImages(newArray);\n  };\n\n  const addInput = () => {\n    let newArray = [...images];\n    newArray.push({\n      value: \"\",\n      id: \"-1\",\n    });\n    setImages(newArray);\n  };\n\n  const removeInput = (index) => {\n    let newArray = [...images];\n    newArray.splice(index, 1);\n    setImages(newArray);\n  };\n\n  const onSubmit = async () => {\n    setLoading(true);\n\n    const payload = images.map((image) => ({\n      image_id: image.id,\n    }));\n    try {\n      let response = await attachImageToProduct(productId, payload)\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n\n    setLoading(false);\n  };\n\n  setTimeout(() => {\n    setLoading(false);\n  }, 2000);\n\n  const fetchProducts = async () => {\n    try {\n      let response = await getProduct(1, 1000);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.products.map((product) => ({\n          id: product.id,\n          value: product.name,\n        }));\n        if (isMounted) {\n          setProductOption(result);\n        }\n      } else {\n        console.error(\"fail to fetch products\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchImage = async (page, perPage) => {\n    try {\n      let response = await getImage(page, perPage);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.images.map((image) => ({\n          id: image.id,\n          value: image.url,\n        }));\n        if (isMounted) {\n          setImageOption(result);\n        }\n      } else {\n        console.error(\"fail to fetch images\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchImage(1, 1000);\n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, []);\n\n  return (\n    <>\n      <h1>Image Form</h1>\n      <Form\n        labelCol={{ span: 2 }}\n        wrapperCol={{ span: 16 }}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name={[\"user\", \"product\"]}\n          label=\"Product\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={productOption}\n            onSelect={onSelect}\n            placeholder=\"Insert product name\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n\n        {images.map((image, index) => {\n          return (\n            <Form.Item\n              key={index}\n              label=\"Image Url\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Form.Item\n                style={{\n                  display: \"inline-block\",\n                  width: \"calc(50% - 8px)\",\n                }}\n              >\n                <AutoComplete\n                  options={imageOption}\n                  onSelect={(value, option) =>\n                    insertValue(value, option, index)\n                  }\n                  placeholder=\"Image name\"\n                  value={image.value}\n                  filterOption={(inputValue, option) =>\n                    option.value\n                      .toUpperCase()\n                      .indexOf(inputValue.toUpperCase()) !== -1\n                  }\n                />\n              </Form.Item>\n              <Form.Item style={{ display: \"inline-block\", marginLeft: 16 }}>\n                <Button\n                  style={{ display: \"inline-block\", marginLeft: 16 }}\n                  type=\"primary\"\n                  onClick={() => removeInput(index)}\n                  danger\n                  disabled={index === 0 && images.length == 1}\n                >\n                  <CloseOutlined />\n                </Button>\n                {index === images.length - 1 && (\n                  <Button\n                    style={{ display: \"inline-block\", marginLeft: 16 }}\n                    type=\"primary\"\n                    onClick={addInput}\n                  >\n                    <PlusOutlined />\n                  </Button>\n                )}\n              </Form.Item>\n            </Form.Item>\n          );\n        })}\n        <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ImageLogoForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Button, AutoComplete } from \"antd\";\nimport { PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { getVariant } from \"../../API-services/variant\";\nimport { getImage } from \"../../API-services/images\";\nimport { attachImageToVariant } from \"../../API-services/imageAttachent\";\nimport { successModal, errorModal } from \"../../utilities/modal\";\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nconst ImageLogoForm = () => {\n  let isMounted = true\n  let [variantOption, setVariantOption] = useState([]);\n  let [imageOption, setImageOption] = useState([]);\n  let [variantId, setVariantId] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let [images, setImages] = useState([\n    {\n      value: \"\",\n      id: \"-1\",\n    },\n  ]);\n\n  const onSelect = (value, optionObject) => {\n    setVariantId(optionObject.id);\n  };\n\n  const insertValue = (value, optionObject, index) => {\n    let newArray = [...images];\n    newArray[index][\"id\"] = optionObject.id;\n    newArray[index][\"value\"] = value;\n    setImages(newArray);\n  };\n\n  const addInput = () => {\n    let newArray = [...images];\n    newArray.push({\n      value: \"\",\n      id: \"-1\",\n    });\n    setImages(newArray);\n  };\n\n  const removeInput = (index) => {\n    let newArray = [...images];\n    newArray.splice(index, 1);\n    setImages(newArray);\n  };\n\n  const onSubmit = async () => {\n    setLoading(true);\n\n    const payload = images.map((image) => ({\n      image_id: image.id,\n    }));\n    try {\n      let response = await attachImageToVariant(variantId, payload)\n      if (response.status === 200) {\n        successModal();\n      } else {\n        errorModal();\n      }\n    } catch (error) {\n      errorModal();\n      console.error(error);\n    }\n\n    setLoading(false);\n  };\n\n  setTimeout(() => {\n    setLoading(false);\n  }, 2000);\n\n  const fetchVariants = async () => {\n    try {\n      let response = await getVariant(1, 1000);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.variants.map((variant) => ({\n          id: variant.id,\n          value: variant.name,\n        }));\n        if (isMounted) {\n          setVariantOption(result);\n        }\n      } else {\n        console.error(\"fail to fetch variants\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchImage = async (page, perPage) => {\n    try {\n      let response = await getImage(page, perPage);\n      let result = [];\n      if (response.status === 200) {\n        result = response.data.data.images.map((image) => ({\n          id: image.id,\n          value: image.url,\n        }));\n        setImageOption(result);\n      } else {\n        console.error(\"fail to fetch images\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVariants();\n    fetchImage(1, 1000);\n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, []);\n\n  return (\n    <>\n      <h1>Image Form</h1>\n      <Form\n        labelCol={{ span: 2 }}\n        wrapperCol={{ span: 16 }}\n        name=\"nest-messages\"\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          name={[\"user\", \"variant\"]}\n          label=\"Variant\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={variantOption}\n            onSelect={onSelect}\n            placeholder=\"Insert variant name\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n\n        {images.map((image, index) => {\n          return (\n            <Form.Item\n              key={index}\n              label=\"Image Url\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Form.Item\n                style={{\n                  display: \"inline-block\",\n                  width: \"calc(50% - 8px)\",\n                }}\n              >\n                <AutoComplete\n                  options={imageOption}\n                  onSelect={(value, option) =>\n                    insertValue(value, option, index)\n                  }\n                  placeholder=\"Image name\"\n                  value={image.value}\n                  filterOption={(inputValue, option) =>\n                    option.value\n                      .toUpperCase()\n                      .indexOf(inputValue.toUpperCase()) !== -1\n                  }\n                />\n              </Form.Item>\n              <Form.Item style={{ display: \"inline-block\", marginLeft: 16 }}>\n                <Button\n                  style={{ display: \"inline-block\", marginLeft: 16 }}\n                  type=\"primary\"\n                  onClick={() => removeInput(index)}\n                  danger\n                  disabled={index === 0 && images.length == 1}\n                >\n                  <CloseOutlined />\n                </Button>\n                {index === images.length - 1 && (\n                  <Button\n                    style={{ display: \"inline-block\", marginLeft: 16 }}\n                    type=\"primary\"\n                    onClick={addInput}\n                  >\n                    <PlusOutlined />\n                  </Button>\n                )}\n              </Form.Item>\n            </Form.Item>\n          );\n        })}\n        <Button type=\"primary\" loading={loading} onClick={onSubmit}>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ImageLogoForm;\n","import React from 'react'\nimport './container.css'\n\nfunction Container(props) {\n  \n  return (\n    <>\n      <div className=\"container\">\n        {props.children}\n      </div>\n    </>\n  )\n}\n\nexport default Container","import React from \"react\";\nimport \"./image.css\";\n\nfunction Image(props) {\n  return (\n    <img\n      src={props.imageUrl ? props.imageUrl : \"\"}\n      alt=\"image_logo\"\n      className=\"image\"\n      style={props.style}\n    ></img>\n  );\n}\n\nexport default Image;\n","import React from 'react'\nimport './title.css'\n\nfunction LargeText(props) {\n\n  return (\n    <h2 style={props.style} className=\"title\">{props.children}</h2>\n  )\n}\n\nexport default LargeText","import React from 'react'\nimport './description.css'\n\nfunction MediumText(props) {\n\n  return (\n    <p style={props.style} className=\"medium-text\">{props.children}</p>\n  )\n}\n\nexport default MediumText","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../../components/container/Container\";\nimport Image from \"../../components/image/Image\";\nimport Title from \"../../components/title/Title\";\nimport MediumText from \"../../components/description/Description\";\nimport { Button } from \"antd\";\n\nconst Entity = (props) => {\n  const { name, logo, description, detailUrl, editUrl, parentID } = props;\n\n  return (\n    <Container>\n      {logo && <Image imageUrl={logo} />}\n      {parentID && (\n        <>\n          <MediumText style={{ fontWeight: \"bold\" }}>ProductID: {parentID}</MediumText>\n        </>\n      )}\n      <Title style={{ marginLeft: 10 }}>{name}</Title>\n      {description && (\n        <>\n          <MediumText style={{ fontWeight: \"bold\" }}>Description:</MediumText>\n          <MediumText style={{ marginBottom: \"16px\" }}>\n            {description}\n          </MediumText>\n        </>\n      )}\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link to={detailUrl ? detailUrl : \"#\"}>\n          <Button type=\"primary\" danger>\n            Detail\n          </Button>\n        </Link>\n        <Link to={editUrl ? editUrl : \"#\"}>\n          <Button style={{ marginLeft: 16 }} type=\"primary\">\n            Edit\n          </Button>\n        </Link>\n      </div>\n    </Container>\n  );\n};\n\nconst EntityVariant = (props) => {\n  const { name, size, color, detailUrl, editUrl, parentID } = props;\n\n  return (\n    <Container>\n      {parentID && (\n        <>\n          <MediumText style={{ fontWeight: \"bold\" }}>ProductID: {parentID}</MediumText>\n        </>\n      )}\n      <Title style={{ marginLeft: 10 }}>{name}</Title>\n      {size && (\n        <>\n          <MediumText style={{ fontWeight: \"bold\" }}>Size: {size}</MediumText>\n        </>\n      )}\n      {color && (\n        <>\n          <MediumText style={{ fontWeight: \"bold\" }}>Color: {color}</MediumText>\n        </>\n      )}\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link to={detailUrl ? detailUrl : \"#\"}>\n          <Button type=\"primary\" danger>\n            Detail\n          </Button>\n        </Link>\n        <Link to={editUrl ? editUrl : \"#\"}>\n          <Button style={{ marginLeft: 16 }} type=\"primary\">\n            Edit\n          </Button>\n        </Link>\n      </div>\n    </Container>\n  );\n};\n\nconst EntityImageLogo = (props) => {\n  const { url_name, editUrl } = props;\n\n  return (\n    <Container>\n      <Title style={{ marginLeft: 10 }}>{url_name}</Title>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link to={editUrl ? editUrl : \"#\"}>\n          <Button style={{ marginLeft: 16 }} type=\"primary\">\n            Edit\n          </Button>\n        </Link>\n      </div>\n    </Container>\n  );\n};\n\n// export default Entity;\nexport {\n  Entity,\n  EntityVariant,\n  EntityImageLogo\n}\n","import React, { useState, useEffect } from \"react\";\nimport { getProduct } from \"../../API-services/product\";\nimport {Entity as Product} from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [products, setProducts] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchProducts = async (page, perPage) => {\n    try {\n      let response = await getProduct(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.products.map((product) => ({\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          logo: product.logo.url,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n          setProducts(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch products\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  const onPaginationChange = (page, pageSize) => {\n    fetchProducts(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchProducts(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1 style={{fontSize: 32}}>Product List</h1>\n        {products.map((product, index) => {\n          return (\n            <Product\n              key={index}\n              name={product.name}\n              logo={product.logo}\n              description={product.description}\n              detailUrl={\"/product/detail/\" + product.id}\n              editUrl={`/product/${product.id}`}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { getVariant } from \"../../API-services/variant\";\nimport { EntityVariant as Variant }  from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [variants, setVariants] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchVariants = async (page, perPage) => {\n    try {\n      let response = await getVariant(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.variants.map((variant) => ({\n          id: variant.id,\n          name: variant.name,\n          product_id: variant.product_id,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n          setVariants(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch variants\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchVariants(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchVariants(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1>Variant List</h1>\n        {variants.map((variant, index) => {\n          return (\n            <Variant\n              key={index}\n              name={variant.name}\n              size={variant.size}\n              color={variant.color}\n              detailUrl={`/variant/detail/${variant.id}`}\n              editUrl={`/variant/${variant.id}`}\n              parentID={variant.product_id}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { getImage } from \"../../API-services/images\";\nimport { EntityImageLogo as ImageEntity }  from \"../../components/Entity\";\nimport { Pagination } from \"antd\";\n\nconst List = () => {\n  let isMounted = true;\n  let [images, setImages] = useState([]);\n  let [paging, setPaging] = useState({});\n\n  const fetchVariants = async (page, perPage) => {\n    try {\n      let response = await getImage(page, perPage);\n      let result = [];\n      let paginationAttribute = {};\n      if (response.status === 200) {\n        result = response.data.data.images.map((variant) => ({\n          id: variant.id,\n          url_name: variant.url,\n        }));\n        paginationAttribute = response.data.data.paging;\n        if (isMounted) {\n            setImages(result);\n          setPaging({\n            currentPage: paginationAttribute.current_page,\n            total: paginationAttribute.count,\n          });\n        }\n      } else {\n        console.error(\"fail to fetch images logo\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPaginationChange = (page, pageSize) => {\n    fetchVariants(page, pageSize)\n  }\n\n  useEffect(() => {\n    fetchVariants(1, 10);\n\n    return function cleanup() {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", paddingBottom: 72 }}>\n      <div>\n        <h1>Images List</h1>\n        {images.map((images, index) => {\n          return (\n            <ImageEntity\n              key={index}\n              url_name={images.url_name}\n            //   detailUrl={`/image/detail/${variant.id}`}\n              editUrl={`/image_logo/${images.id}`}\n            />\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          bottom: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          defaultCurrent={1}\n          total={paging.total}\n          current={paging.currentPage}\n          pageSize={10}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default List;","import React, { useState, useEffect } from \"react\";\nimport Image from \"../../components/image/Image\";\nimport Title from \"../../components/title/Title\";\nimport MediumText from \"../../components/description/Description\";\nimport { getProductById } from \"../../API-services/product\";\nimport {EntityVariant as Variant} from \"../../components/Entity\";\n\nconst Detail = (props) => {\n  let isMounted = true\n  let [product, setProduct] = useState({\n    id: \"\",\n    logo: \"\",\n    name: \"\",\n    description: \"\",\n    images: [],\n    variants: [],\n  });\n\n  const fetchProduct = async (productId) => {\n    try {\n      let response = await getProductById(productId);\n      let productData = response.data.data.product;\n      if (isMounted) {\n        setProduct(productData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProduct(props.match.params.productId);\n\n    return function cleanup() {\n      isMounted = false\n    }\n  }, []);\n  return (\n    <>\n      <h1 style={{ fontSize: 30 }}>Product Detail</h1>\n      <div style={{ borderBottom: \"1px solid #ddd\" }}>\n        <Image imageUrl={product.logo.url} />\n        <Title>{product.name}</Title>\n        <MediumText style={{ fontWeight: \"bold\" }}>Description:</MediumText>\n        <MediumText style={{ marginBottom: \"16px\" }}>\n          {product.description}\n        </MediumText>\n      </div>\n      <h2 style={{ marginTop: 32 }}>Attached Images:</h2>\n      <div\n        style={{\n          paddingBottom: 16,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          borderBottom: \"1px solid #ddd\",\n        }}\n      >\n        {product.images.map((image, index) => {\n          return (\n            <Image\n              key={index}\n              imageUrl={image.url}\n              style={{ marginRight: 16, border: \"1px solid #ddd\" }}\n            />\n          );\n        })}\n      </div>\n      <h2 style={{ marginTop: 32 }}>Variant:</h2>\n      <div>\n        {product.variants.map((variant, index) => {\n          return (\n            <Variant key={index} name={variant.name} size={variant.size} color={variant.color}/>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Detail;\n","import React, { useState, useEffect } from \"react\";\nimport Image from \"../../components/image/Image\";\nimport Title from \"../../components/title/Title\";\nimport MediumText from \"../../components/description/Description\";\nimport { getVariantById } from \"../../API-services/variant\";\nimport { getProductById } from \"../../API-services/product\";\n// import Variant from \"../../components/Entity\";\n\nconst Detail = (props) => {\n  let isMounted = true\n  let [variant, setVariant] = useState({\n      id: \"\",\n      name: \"\",\n      size: \"\",\n      color: \"\",\n      product_id: \"\",\n      images: [],\n    },\n  );\n  let [product, setProduct] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n  });\n\n  const fetchVariant = async (variantId) => {\n    try {\n      let response = await getVariantById(variantId);\n      fetchProduct(response.data.data.variant.product_id)\n      // console.log(\"variant.product_id: \"+ response.data.data.variant.product_id)\n      \n      let variantData = response.data.data.variant;\n      setVariant(variantData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchProduct = async (productId) => {\n    try {\n      let response = await getProductById(productId);\n      let productData = response.data.data.product;\n      setProduct(productData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVariant(props.match.params.variantId);\n    \n    return function cleanup() {\n      isMounted = false\n    }\n  }, []);\n  return (\n    <>\n      <h1 style={{ fontSize: 30 }}>Variant Detail</h1>\n      <div style={{ borderBottom: \"1px solid #ddd\" }}>\n        <MediumText style={{ fontWeight: \"bold\" }}>Product ID:</MediumText>\n        <Title>{product.id}, {product.name}</Title>\n      </div>\n      <div style={{ borderBottom: \"1px solid #ddd\" }}>\n        <MediumText style={{ fontWeight: \"bold\" }}>Variant Name:</MediumText>\n        <h2>{variant.name}</h2>\n      </div>\n      <div style={{ borderBottom: \"1px solid #ddd\" }}>\n        <MediumText style={{ fontWeight: \"bold\" }}>Size:</MediumText>\n        <h2>{variant.size}</h2>\n      </div>\n      <div style={{ borderBottom: \"1px solid #ddd\" }}>\n        <MediumText style={{ fontWeight: \"bold\" }}>Color:</MediumText>\n        <h2>{variant.color}</h2>\n      </div>\n      <h2 style={{ marginTop: 32 }}>Attached Images:</h2>\n      <div\n        style={{\n          paddingBottom: 16,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          borderBottom: \"1px solid #ddd\",\n        }}\n      >\n        {variant.images.map((image, index) => {\n          return (\n            <Image\n              key={index}\n              imageUrl={image.url}\n              style={{ marginRight: 16, border: \"1px solid #ddd\" }}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Detail;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu } from \"antd\";\nimport { DesktopOutlined, FileOutlined } from \"@ant-design/icons\";\nimport { HomeOutlined } from '@ant-design/icons'\n\n// import Home from \"./pages/Home/index.jsx\";\nimport ProductForm from \"./pages/Product/Form\";\nimport VariantForm from \"./pages/Variant/Form\";\nimport ImageLogoForm from \"./pages/ImageLogo/Form\";\nimport LinkImageProduct from \"./pages/Product/LinkImageForm\";\nimport LinkImageVariant from \"./pages/Variant/LinkImageForm\";\nimport ProductList from \"./pages/Product/List\";\nimport VariantList from \"./pages/Variant/List\";\nimport ImageList from \"./pages/ImageLogo/List\";\nimport ProductDetail from \"./pages/ProductDetail\";\nimport VariantDetail from \"./pages/VariantDetail\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction App() {\n  const [collapsed, setCollasped] = useState(false);\n\n  const onCollapse = (collapsedParam) => setCollasped({ collapsedParam });\n\n  const logoStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  return (\n    <Router>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n          <Link to=\"/\">\n            <div className=\"logo\" style={logoStyle}>\n              <HomeOutlined style={{color:\"66788a\"}} />\n              <h1 className=\"logo-text\">&nbsp; Home</h1>\n            </div>\n          </Link>\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n            <SubMenu key=\"sub1\" icon={<DesktopOutlined />} title=\"Products\">\n              <Menu.Item key=\"1\">\n                <Link to=\"/product/insert\">Insert</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/product/images\">Attach Image</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/product/list\">List</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<FileOutlined />} title=\"Variants\">\n              <Menu.Item key=\"4\">\n                <Link to=\"/variant/form\">Insert</Link>\n              </Menu.Item>\n              <Menu.Item key=\"5\">\n                <Link to=\"/variant/images\">Attach Images</Link>\n              </Menu.Item>\n              <Menu.Item key=\"6\">\n                <Link to=\"/variant/list\">List</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<FileOutlined />} title=\"Images\">\n              <Menu.Item key=\"7\">\n                <Link to=\"/image_logo/form\">Insert</Link>\n              </Menu.Item>\n              <Menu.Item key=\"8\">\n                <Link to=\"/image_logo/list\">List</Link>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header\n            className=\"site-layout-background\"\n            style={{ padding: 0, marginBottom: 16 }}\n          />\n          <Content style={{ margin: \"0 16px\" }}>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 360 }}\n            >\n              <Switch>\n                <Route exact path=\"/\" component={ProductList} />\n                <Route path=\"/product/insert\" component={ProductForm} />\n                <Route path=\"/product/images\" component={LinkImageProduct} />\n                <Route path=\"/product/list\" component={ProductList} />\n                <Route\n                  path=\"/product/detail/:productId\"\n                  component={ProductDetail}\n                />\n                <Route path=\"/product/:productId\" component={ProductForm} />\n                <Route path=\"/variant/form\" component={VariantForm} />\n                <Route path=\"/variant/images\" component={LinkImageVariant} />\n                <Route path=\"/variant/list\" component={VariantList} />\n                <Route\n                  path=\"/variant/detail/:variantId\"\n                  component={VariantDetail}\n                />\n                <Route\n                  path=\"/variant/:variantId\"\n                  component={VariantForm}\n                />\n                <Route path=\"/image_logo/form\" component={ImageLogoForm} />\n                <Route path=\"/image_logo/list\" component={ImageList} />\n                <Route\n                  path=\"/image_logo/:imageId\"\n                  component={ImageLogoForm}\n                />\n                \n                <Route render={() => <h1>404 Not Found</h1>} />\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Ant Design ©2018 Created by Ant UED\n          </Footer>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}